#!/usr/bin/env python3
"""
Migration: Adicionar campo "Local dos Fatos" aos processos/procedimentos
Autor: Sistema
Data: 2025-08-05

Descri√ß√£o:
- Cria tabela 'municipios_distritos' com todos os munic√≠pios e distritos de RO
- Adiciona coluna 'local_fatos' na tabela 'processos_procedimentos'
- Define valor padr√£o 'Ariquemes' para registros existentes
- Popula a tabela com dados do arquivo municipios_e_distritos_rondonia.md
"""

import sqlite3
import os
import sys
from datetime import datetime
import uuid

def criar_backup(db_path):
    """Cria backup do banco antes da migra√ß√£o"""
    backup_dir = 'backups'
    if not os.path.exists(backup_dir):
        os.makedirs(backup_dir)
    
    timestamp = datetime.now().strftime('%Y%m%d_%H%M%S')
    backup_path = os.path.join(backup_dir, f'pre_local_fatos_migration_{timestamp}.db')
    
    import shutil
    shutil.copy2(db_path, backup_path)
    print(f"‚úÖ Backup criado: {backup_path}")
    return backup_path

def executar_migracao():
    """Executa a migra√ß√£o completa"""
    db_path = 'usuarios.db'
    
    if not os.path.exists(db_path):
        print(f"‚ùå Banco de dados n√£o encontrado: {db_path}")
        return False
    
    # Criar backup
    backup_path = criar_backup(db_path)
    
    try:
        conn = sqlite3.connect(db_path)
        cursor = conn.cursor()
        
        print("üîÑ Iniciando migra√ß√£o...")
        
        # 1. Criar tabela municipios_distritos
        print("üìù Criando tabela municipios_distritos...")
        cursor.execute("""
            CREATE TABLE IF NOT EXISTS municipios_distritos (
                id TEXT PRIMARY KEY,
                nome TEXT NOT NULL,
                tipo TEXT NOT NULL CHECK (tipo IN ('municipio', 'distrito')),
                municipio_pai TEXT,
                created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                ativo BOOLEAN DEFAULT 1
            )
        """)
        
        # 2. Popular tabela com dados dos munic√≠pios e distritos
        print("üìç Populando tabela com munic√≠pios e distritos de RO...")
        
        municipios_distritos = [
            # Munic√≠pios e seus distritos (ajustados para evitar duplica√ß√µes)
            ('Alta Floresta D\'Oeste', 'municipio', None),
            ('Filad√©lfia D\'Oeste', 'distrito', 'Alta Floresta D\'Oeste'),
            ('Izidol√¢ndia', 'distrito', 'Alta Floresta D\'Oeste'),
            ('Nova Gease D\'Oeste', 'distrito', 'Alta Floresta D\'Oeste'),
            ('Rolim de Moura do Guapor√©', 'distrito', 'Alta Floresta D\'Oeste'),
            ('Santo Ant√¥nio D\'Oeste', 'distrito', 'Alta Floresta D\'Oeste'),
            ('Alto Alegre dos Parecis', 'municipio', None),
            ('Alto Para√≠so', 'municipio', None),
            ('Alvorada D\'Oeste', 'municipio', None),
            ('Tancred√≥polis', 'distrito', 'Alvorada D\'Oeste'),
            ('Terra Boa', 'distrito', 'Alvorada D\'Oeste'),
            ('Ariquemes', 'municipio', None),
            ('Bom Futuro', 'distrito', 'Ariquemes'),
            ('Joel√¢ndia', 'distrito', 'Ariquemes'),
            ('Buritis', 'municipio', None),
            ('Cabixi', 'municipio', None),
            ('Cacaul√¢ndia', 'municipio', None),
            ('Cacoal', 'municipio', None),
            ('Riozinho', 'distrito', 'Cacoal'),
            ('Divin√≥polis', 'distrito', 'Cacoal'),
            ('Campo Novo de Rond√¥nia', 'municipio', None),
            ('Rio Branco', 'distrito', 'Campo Novo de Rond√¥nia'),
            ('Tr√™s Coqueiros', 'distrito', 'Campo Novo de Rond√¥nia'),
            ('Candeias do Jamari', 'municipio', None),
            ('Rio Preto do Candeias', 'distrito', 'Candeias do Jamari'),
            ('Castanheiras', 'municipio', None),
            ('Jardin√≥polis', 'distrito', 'Castanheiras'),
            ('Cerejeiras', 'municipio', None),
            ('Chupinguaia', 'municipio', None),
            ('Boa Esperan√ßa', 'distrito', 'Chupinguaia'),
            ('Novo Plano', 'distrito', 'Chupinguaia'),
            ('Colorado do Oeste', 'municipio', None),
            ('Corumbiara', 'municipio', None),
            ('Costa Marques', 'municipio', None),
            ('Pr√≠ncipe da Beira', 'distrito', 'Costa Marques'),
            ('Cujubim', 'municipio', None),
            ('Espig√£o D\'Oeste', 'municipio', None),
            ('Boa Vista do Pacarana', 'distrito', 'Espig√£o D\'Oeste'),
            ('Flor da Serra', 'distrito', 'Espig√£o D\'Oeste'),
            ('Nova Esperan√ßa - Espig√£o', 'distrito', 'Espig√£o D\'Oeste'),
            ('Novo Para√≠so - Espig√£o', 'distrito', 'Espig√£o D\'Oeste'),
            ('Governador Jorge Teixeira', 'municipio', None),
            ('Colina Verde', 'distrito', 'Governador Jorge Teixeira'),
            ('Guajar√°-Mirim', 'municipio', None),
            ('Iata', 'distrito', 'Guajar√°-Mirim'),
            ('Surpresa', 'distrito', 'Guajar√°-Mirim'),
            ('Itapu√£ do Oeste', 'municipio', None),
            ('Jaru', 'municipio', None),
            ('Bom Jesus', 'distrito', 'Jaru'),
            ('Santa Cruz da Serra', 'distrito', 'Jaru'),
            ('Taril√¢ndia', 'distrito', 'Jaru'),
            ('Ji-Paran√°', 'municipio', None),
            ('Nova Colina', 'distrito', 'Ji-Paran√°'),
            ('Nova Londrina', 'distrito', 'Ji-Paran√°'),
            ('Machadinho D\'Oeste', 'municipio', None),
            ('Oriente Novo', 'distrito', 'Machadinho D\'Oeste'),
            ('Quinto Bec', 'distrito', 'Machadinho D\'Oeste'),
            ('Tabajara', 'distrito', 'Machadinho D\'Oeste'),
            ('Ministro Andreazza', 'municipio', None),
            ('Mirante da Serra', 'municipio', None),
            ('Monte Negro', 'municipio', None),
            ('Nova Brasil√¢ndia D\'Oeste', 'municipio', None),
            ('Nova Mamor√©', 'municipio', None),
            ('Araras', 'distrito', 'Nova Mamor√©'),
            ('Jacyn√≥polis', 'distrito', 'Nova Mamor√©'),
            ('Nova Dimens√£o', 'distrito', 'Nova Mamor√©'),
            ('Palmeiras', 'distrito', 'Nova Mamor√©'),
            ('Nova Uni√£o', 'municipio', None),
            ('Novo Horizonte do Oeste', 'municipio', None),
            ('Migrantin√≥polis', 'distrito', 'Novo Horizonte do Oeste'),
            ('Ouro Preto do Oeste', 'municipio', None),
            ('Rondominas', 'distrito', 'Ouro Preto do Oeste'),
            ('Parecis', 'municipio', None),
            ('Pimenta Bueno', 'municipio', None),
            ('Marco Rondon', 'distrito', 'Pimenta Bueno'),
            ('Pimenteiras do Oeste', 'municipio', None),
            ('Porto Velho', 'municipio', None),
            ('Abun√£', 'distrito', 'Porto Velho'),
            ('Calama', 'distrito', 'Porto Velho'),
            ('Demarca√ß√£o', 'distrito', 'Porto Velho'),
            ('Extrema', 'distrito', 'Porto Velho'),
            ('Fortaleza do Abun√£', 'distrito', 'Porto Velho'),
            ('Jaci-Paran√°', 'distrito', 'Porto Velho'),
            ('Mutum-Paran√°', 'distrito', 'Porto Velho'),
            ('Nazar√©', 'distrito', 'Porto Velho'),
            ('Nova Calif√≥rnia', 'distrito', 'Porto Velho'),
            ('S√£o Carlos', 'distrito', 'Porto Velho'),
            ('Vista Alegre do Abun√£', 'distrito', 'Porto Velho'),
            ('Presidente M√©dici', 'municipio', None),
            ('Estrela de Rond√¥nia', 'distrito', 'Presidente M√©dici'),
            ('Novo Riachuelo', 'distrito', 'Presidente M√©dici'),
            ('Vila Bandeira Branca', 'distrito', 'Presidente M√©dici'),
            ('Vila Camargo', 'distrito', 'Presidente M√©dici'),
            ('Primavera de Rond√¥nia', 'municipio', None),
            ('Rio Crespo', 'municipio', None),
            ('Rolim de Moura', 'municipio', None),
            ('Nova Estrela de Rond√¥nia', 'distrito', 'Rolim de Moura'),
            ('Santa Luzia D\'Oeste', 'municipio', None),
            ('Barra de Camaratuba', 'distrito', 'Santa Luzia D\'Oeste'),
            ('S√£o Felipe D\'Oeste', 'municipio', None),
            ('Novo Para√≠so - S√£o Felipe', 'distrito', 'S√£o Felipe D\'Oeste'),
            ('S√£o Francisco do Guapor√©', 'municipio', None),
            ('S√£o Miguel do Guapor√©', 'municipio', None),
            ('Santana do Guapor√©', 'distrito', 'S√£o Miguel do Guapor√©'),
            ('Seringueiras', 'municipio', None),
            ('Teixeir√≥polis', 'municipio', None),
            ('Theobroma', 'municipio', None),
            ('Urup√°', 'municipio', None),
            ('Vale do Anari', 'municipio', None),
            ('Vale do Para√≠so', 'municipio', None),
            ('Vilhena', 'municipio', None),
            ('Nova Conquista', 'distrito', 'Vilhena')
        ]
        
        # Verificar se j√° existem dados na tabela
        cursor.execute("SELECT COUNT(*) FROM municipios_distritos")
        count = cursor.fetchone()[0]
        
        if count == 0:
            for nome, tipo, municipio_pai in municipios_distritos:
                municipio_id = str(uuid.uuid4())
                cursor.execute("""
                    INSERT OR IGNORE INTO municipios_distritos (id, nome, tipo, municipio_pai)
                    VALUES (?, ?, ?, ?)
                """, (municipio_id, nome, tipo, municipio_pai))
            
            print(f"   ‚úÖ Inseridos {len(municipios_distritos)} munic√≠pios/distritos")
        else:
            print(f"   ‚ö†Ô∏è Tabela j√° cont√©m {count} registros - pulando inser√ß√£o")
        
        # 3. Verificar se coluna local_fatos j√° existe
        cursor.execute("PRAGMA table_info(processos_procedimentos)")
        columns = [column[1] for column in cursor.fetchall()]
        
        if 'local_fatos' not in columns:
            print("üìù Adicionando coluna local_fatos...")
            cursor.execute("""
                ALTER TABLE processos_procedimentos 
                ADD COLUMN local_fatos TEXT DEFAULT 'Ariquemes'
            """)
            
            # 4. Atualizar registros existentes com valor padr√£o
            cursor.execute("""
                UPDATE processos_procedimentos 
                SET local_fatos = 'Ariquemes' 
                WHERE local_fatos IS NULL
            """)
            
            affected_rows = cursor.rowcount
            print(f"   ‚úÖ Atualizados {affected_rows} registros com valor padr√£o 'Ariquemes'")
        else:
            print("   ‚ö†Ô∏è Coluna local_fatos j√° existe - pulando cria√ß√£o")
        
        # 5. Verificar dados finais
        cursor.execute("SELECT COUNT(*) FROM municipios_distritos")
        total_municipios = cursor.fetchone()[0]
        
        cursor.execute("SELECT COUNT(*) FROM processos_procedimentos WHERE ativo = 1")
        total_processos = cursor.fetchone()[0]
        
        conn.commit()
        conn.close()
        
        print("\nüéâ Migra√ß√£o conclu√≠da com sucesso!")
        print(f"   üìç Total de munic√≠pios/distritos: {total_municipios}")
        print(f"   üìã Total de processos ativos: {total_processos}")
        print(f"   üíæ Backup salvo em: {backup_path}")
        
        return True
        
    except Exception as e:
        print(f"‚ùå Erro durante migra√ß√£o: {e}")
        print(f"   Restaure o backup se necess√°rio: {backup_path}")
        return False

if __name__ == "__main__":
    print("üîÑ Migra√ß√£o: Adicionar campo Local dos Fatos")
    print("=" * 50)
    
    sucesso = executar_migracao()
    
    if sucesso:
        print("\n‚úÖ Migra√ß√£o executada com sucesso!")
        sys.exit(0)
    else:
        print("\n‚ùå Falha na migra√ß√£o!")
        sys.exit(1)
